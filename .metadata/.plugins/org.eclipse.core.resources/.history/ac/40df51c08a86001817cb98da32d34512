package com.qa.hr;

import static org.junit.Assert.assertTrue;
import static org.junit.Assert.assertEquals;

import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.PageFactory;

import cucumber.api.java.After;
import cucumber.api.java.Before;
import cucumber.api.java.en.Given;
import cucumber.api.java.en.Then;
import cucumber.api.java.en.When;

public class HrSteps {
	
	WebDriver driver; 
	 
	 private Loginpage loginpage;
	 private Dashboard dashboardpage;
	 private AddEmployeePage addemployee;
	 private EmployeeList employeelist;
	 private PersonalDetails personaldetails;
	 
	 String url = "https://qa-trials641.orangehrmlive.com/auth/login";
	 
	 @Before 
	 public void setup () {
			System.setProperty("webdriver.chrome.driver", "C:/Development/web_driver/chromedriver.exe");
			driver = new ChromeDriver();
			driver.manage().window().maximize();
			
	 }
	 
	 @Given("^the login page$")
	 public void the_login_page() {
		 driver.get(url);
		 
		 
	 }
	 
	 @When("^I login$")
	 public void i_login() { 
		 Loginpage loginpage = PageFactory.initElements(driver, Loginpage.class);
		 loginpage.typeusername("Admin");
		 loginpage.typepassword("AdminAdmin");
		 loginpage.clickloginbutton();
		 assertEquals (url, driver.getCurrentUrl());
		 
		 
		 
	 }
	 
	 @When("^I click the PIM tab$")
	 public void i_click_the_PIM_tab() {
		 Dashboard dashboardpage = PageFactory.initElements(driver, Dashboard.class);
			dashboardpage.clickPIMtab();
		 
		 
	 }

	
	@When("^then the Add Employee Tab$")
	public void then_the_Add_Employee_Tab() {
		Dashboard dashboardpage = PageFactory.initElements(driver, Dashboard.class);
		dashboardpage.clickPIMtab();
		
	}
	
	@When("^I fill out the Employee Details correctly$")
	public void i_fill_out_the_Employee_Details_correctly() {
	
		AddEmployeePage addemployee = PageFactory.initElements(driver, AddEmployeePage.class);
		addemployee.enterfirstname("fozia");
		addemployee.enterlastname("khan");
		addemployee.selectlocation();
		
	}
	 
	@When("^I choose to create Login Details by clicking the appropriate button$")
	public void i_choose_to_create_Login_Details_by_clicking_the_appropriate_button() {
		
		AddEmployeePage addemployee = PageFactory.initElements(driver, AddEmployeePage.class);
		addemployee.clickcreatelogindetails();
		
		
	}
	
	@When("^I fill out the Login Details correctly$")
	public void i_fill_out_the_Login_Details_correctly() {
		AddEmployeePage addemployee = PageFactory.initElements(driver, AddEmployeePage.class);
		addemployee.enterusername("fozia");
		addemployee.enterpassword("password");
		addemployee.confirmpassword("password");
		addemployee.selectdefaultrole();
		addemployee.selectdefaultrole2();
		addemployee.adminrole();
	}
	 
	@When("^I click the Save button$")
	public void i_click_the_Save_button() {
		
		AddEmployeePage addemployee = PageFactory.initElements(driver, AddEmployeePage.class);
		addemployee.clicksave();
		
		
	}
	
	@Then("^I can search for the Employee I have just created$")
	public void i_can_search_for_the_Employee_I_have_just_created() {
		
		EmployeeList employeelist = PageFactory.initElements(driver, EmployeeList.class);
		employeelist.clicksearchbox();
		
		
	}
	
	@Then("^select them for inspection$")
	public void select_them_for_inspection() {
		
		EmployeeList employeelist = PageFactory.initElements(driver, EmployeeList.class);
		employeelist.clickemployee();
		
	}
	    
	    
	@After
	public void tearDown() throws InterruptedException {
		Thread.sleep(2000);
		driver.close();
		driver.quit();

		}
}
